{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["data","value","label","children","disabled","isLeaf","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","forEach","dataItem","cItem","concat","console","log","handleClick","e","preventDefault","setState","show","state","initData","setTimeout","onMaskClick","renderTabBar","react_default","a","createElement","lib","_ref","style","objectSpread","zIndex","tabs_default","DefaultTabBar","_this2","_this$state","menuEl","menu_default","className","height","document","documentElement","clientHeight","loadingEl","width","display","justifyContent","activity_indicator_default","size","getFieldProps","form","tabs","title","Array","from","map","_val","i","icon","text","initalPage","white_space_default","notice_bar_default","marqueeProps","loop","padding","paddingLeft","fontFamily","accordion_default","defaultActiveKey","Panel","header","borderTop","list_default","Item","renderHeader","textarea_item_default","assign","initialValue","rows","count","grid_default","columnNum","nav_bar_default","leftContent","mode","src","alt","onLeftClick","onClick","alignItems","backgroundColor","Component","createForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4bffff33.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Tabs,\n  WhiteSpace,\n  Accordion,\n  List,\n  NoticeBar,\n  TextareaItem,\n  Grid,\n  Menu,\n  ActivityIndicator,\n  NavBar\n} from 'antd-mobile'\nimport { createForm } from 'rc-form'\nimport { StickyContainer, Sticky } from 'react-sticky'\nimport './App.css'\nconst data = [\n  {\n    value: '1',\n    label: 'Food',\n    children: [\n      {\n        label: 'All Foods',\n        value: '1',\n        disabled: false\n      },\n      {\n        label: 'Chinese Food',\n        value: '2'\n      },\n      {\n        label: 'Hot Pot',\n        value: '3'\n      },\n      {\n        label: 'Buffet',\n        value: '4'\n      },\n      {\n        label: 'Fast Food',\n        value: '5'\n      },\n      {\n        label: 'Snack',\n        value: '6'\n      },\n      {\n        label: 'Bread',\n        value: '7'\n      },\n      {\n        label: 'Fruit',\n        value: '8'\n      },\n      {\n        label: 'Noodle',\n        value: '9'\n      },\n      {\n        label: 'Leisure Food',\n        value: '10'\n      }\n    ]\n  },\n  {\n    value: '2',\n    label: 'Supermarket',\n    children: [\n      {\n        label: 'All Supermarkets',\n        value: '1'\n      },\n      {\n        label: 'Supermarket',\n        value: '2',\n        disabled: true\n      },\n      {\n        label: 'C-Store',\n        value: '3'\n      },\n      {\n        label: 'Personal Care',\n        value: '4'\n      }\n    ]\n  },\n  {\n    value: '3',\n    label: 'Extra',\n    isLeaf: true,\n    children: [\n      {\n        label: 'you can not see',\n        value: '1'\n      }\n    ]\n  }\n]\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { initData: '', show: false }\n  }\n  onChange = value => {\n    let label = ''\n    data.forEach(dataItem => {\n      if (dataItem.value === value[0]) {\n        label = dataItem.label\n        if (dataItem.children && value[1]) {\n          dataItem.children.forEach(cItem => {\n            if (cItem.value === value[1]) {\n              label += ` ${cItem.label}`\n            }\n          })\n        }\n      }\n    })\n    console.log(label)\n  }\n  handleClick = e => {\n    e.preventDefault() // Fix event propagation on Android\n    this.setState({\n      show: !this.state.show\n    })\n    // mock for async data loading\n    if (!this.state.initData) {\n      setTimeout(() => {\n        this.setState({\n          initData: data\n        })\n      }, 500)\n    }\n  }\n  onMaskClick = () => {\n    this.setState({\n      show: false\n    })\n  }\n  //Tab切换\n  renderTabBar = props => {\n    return (\n      <Sticky>\n        {({ style }) => (\n          <div style={{ ...style, zIndex: 1 }}>\n            <Tabs.DefaultTabBar {...props} />\n          </div>\n        )}\n      </Sticky>\n    )\n  }\n  render() {\n    const { initData, show } = this.state\n    const menuEl = (\n      <Menu\n        className=\"foo-menu\"\n        data={initData}\n        value={['1', '3']}\n        onChange={this.onChange}\n        height={document.documentElement.clientHeight * 0.6}\n      />\n    )\n    const loadingEl = (\n      <div\n        style={{\n          width: '100%',\n          height: document.documentElement.clientHeight * 0.6,\n          display: 'flex',\n          justifyContent: 'center'\n        }}\n      >\n        <ActivityIndicator size=\"large\" />\n      </div>\n    )\n    const { getFieldProps } = this.props.form\n    const tabs = [\n      { title: '我的首页' },\n      { title: '我的信息' },\n      { title: '关于' }\n    ]\n    const data = Array.from(new Array(9)).map((_val, i) => ({\n      icon:\n        'https://gw.alipayobjects.com/zos/rmsportal/nywPmnTAvTmLusPxHPSu.png',\n      text: `name${i}`\n    }))\n    const TabExample = () => (\n      <div>\n        <StickyContainer>\n          <Tabs tabs={tabs} initalPage={'t2'} renderTabBar={this.renderTabBar}>\n            <div>\n              <WhiteSpace size=\"lg\" />\n              <NoticeBar\n                marqueeProps={{ loop: true, style: { padding: '0 7.5px' } }}\n              >\n                Notice: The arrival time of incomes and transfers of Yu &#39;E\n                Bao will be delayed during National Day.\n              </NoticeBar>\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'start',\n                  paddingLeft: '15px',\n                  fontFamily: 'PingFangSC-Regular'\n                }}\n              >\n                <h3>手风琴模式</h3>\n              </div>\n              <div>\n                <Accordion\n                  defaultActiveKey=\"0\"\n                  className=\"my-accordion\"\n                  onChange={this.onChange}\n                >\n                  <Accordion.Panel\n                    header=\"Title 1\"\n                    style={{ borderTop: 'none' }}\n                  >\n                    <List className=\"my-list\">\n                      <List.Item>content 1</List.Item>\n                      <List.Item>content 2</List.Item>\n                      <List.Item>content 3</List.Item>\n                    </List>\n                  </Accordion.Panel>\n                  <Accordion.Panel header=\"Title 2\" className=\"pad\">\n                    this is panel content2 or other\n                  </Accordion.Panel>\n                  <Accordion.Panel header=\"Title 3\" className=\"pad\">\n                    text text text text text text text text text text text text\n                    text text text\n                  </Accordion.Panel>\n                </Accordion>\n                <List renderHeader={() => '留言功能'}>\n                  <TextareaItem\n                    {...getFieldProps('count', {\n                      initialValue: '计数功能,我的意见是...'\n                    })}\n                    rows={5}\n                    count={100}\n                  />\n                </List>\n                <WhiteSpace size=\"lg\" />\n                <div className=\"sub-title\">九宫格</div>\n                <WhiteSpace size=\"lg\" />\n                <Grid data={data} columnNum={3} />\n              </div>\n            </div>\n            <div>\n              <div className={show ? 'menu-active' : ''}>\n                <div>\n                  <NavBar\n                    leftContent=\"Menu\"\n                    mode=\"light\"\n                    icon={\n                      <img\n                        src=\"https://gw.alipayobjects.com/zos/rmsportal/iXVHARNNlmdCGnwWxQPH.svg\"\n                        className=\"am-icon am-icon-md\"\n                        alt=\"\"\n                      />\n                    }\n                    onLeftClick={this.handleClick}\n                    className=\"top-nav-bar\"\n                  >\n                    Here is title\n                  </NavBar>\n                </div>\n                {show ? (initData ? menuEl : loadingEl) : null}\n                {show ? (\n                  <div className=\"menu-mask\" onClick={this.onMaskClick} />\n                ) : null}\n              </div>\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: '250px',\n                backgroundColor: '#fff'\n              }}\n            >\n              关于我\n            </div>\n          </Tabs>\n        </StickyContainer>\n      </div>\n    )\n    return (\n      <div className=\"App\">\n        <TabExample />\n      </div>\n    )\n  }\n}\n\nexport default createForm()(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}